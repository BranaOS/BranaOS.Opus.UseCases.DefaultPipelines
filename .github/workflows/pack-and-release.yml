# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET Pack And Release BranaOS.Opus.UseCases.DefaultPipelines

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          9.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release
    - name: Test
      run: dotnet test --configuration Release --no-build
    - name: Pack
      run: dotnet pack --configuration Release --no-build -p:Version=${{ github.event.release.tag_name }}
    - name: Publish to NuGet.org
      if: github.event.release.prerelease == false
      run: dotnet nuget push "bin/Release/*.nupkg" --source "https://api.nuget.org/v3/index.json" --api-key ${{secrets.NUGET_API_KEY}}
    - name: Publish to GitHub Packages
      if: github.event.release.prerelease == true
      run: dotnet nuget push "bin/Release/*.nupkg" --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" --api-key ${{ secrets.GITHUB_TOKEN }}
    - name: Log URL
      run: |
        PACKAGE_NAME=$(ls bin/Release/*.nupkg | head -n 1 | xargs -n 1 basename | sed 's/\(.*\)\.[0-9].*\.nupkg/\1/')
        if [[ "${{ github.event.release.prerelease }}" == "true" ]]; then
          echo "Package published to GitHub Packages:"
          echo "https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}/packages"
        else
          echo "Package published to NuGet.org:"
          echo "https://www.nuget.org/packages/${PACKAGE_NAME}/"
        fi
