name: .NET Pack And Release BranaOS.Opus.UseCases.DefaultPipelines

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      package_name: ${{ steps.set_package_name.outputs.package_name }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        cache: true
    - name: Validate realease tag
      run: |
        if [[ ! "${{ github.event.release.tag_name }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Release tag must follow semantic versioning (e.g., v1.0.0)."
          exit 1
        fi
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release
    - name: Test
      run: dotnet test --configuration Release --no-build
    - name: Pack
      run: |
        dotnet pack --configuration Release --no-build -p:Version=${{ github.event.release.tag_name }} --output ./artifacts
        if [ ! -f ./artifacts/*.nupkg ]; then
          echo "No package files found after packing"
          exit 1
        fi
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ./artifacts/*.nupkg
    - name: Set PACKAGE_NAME
      id: set_package_name
      run: |
        PACKAGE_FILE=$(ls ./artifacts/*.nupkg | head -n 1 | xargs -n 1 basename)
        VERSION="${{ github.event.release.tag_name }}"
        PACKAGE_NAME="${PACKAGE_FILE%.$VERSION.nupkg}"
        echo "package_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT

  publish-nuget:
    if: github.event.release.prerelease == false
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: nuget-packages
          path: ./artifacts
      - name: Await manual approval
        id: approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: brennon  # Change to your GitHub username or a comma-separated list
          minimum-approvals: 1
          issue-title: "Approve deployment?"
          issue-body: "Approve to continue deployment or comment 'abort' to stop."
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Publish to NuGet.org
        run: dotnet nuget push "./artifacts/*.nupkg" --source "https://api.nuget.org/v3/index.json" --api-key ${{secrets.NUGET_API_KEY}}
      - name: Echo NuGet.org URL
        run: |
          echo "Package published to NuGet.org:"
          echo "https://www.nuget.org/packages/${{ needs.build.outputs.package_name }}/"
      - name: Create release comment
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id,
              body: 'âœ… Package successfully published to NuGet.org: https://www.nuget.org/packages/${{ needs.build.outputs.package_name }}/'
            })

  publish-github:
    if: github.event.release.prerelease == true
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: nuget-packages
          path: ./artifacts
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Publish to GitHub Packages
        run: dotnet nuget push "./artifacts/*.nupkg" --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" --api-key ${{ secrets.GITHUB_TOKEN }}
      - name: Echo GitHub Packages URL
        run: |
          echo "Package published to GitHub Packages:"
          echo "https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}/packages"
